<?php
/**
 * @file
 * Contains theme override functions and preprocess functions
 */

use Drupal\Core\Template\RenderWrapper;
use Drupal\Core\Template\Attribute;
use Drupal\search\Form\SearchBlockForm;
use Drupal\Component\Utility\SafeMarkup;
use Drupal\Core\Form\FormStateInterface;
use Drupal\system\Form\ThemeSettingsForm;
use Drupal\file\Entity\File;
use Drupal\Core\Url;
use Drupal\file\Plugin\Core\Entity\FileInterface;

/**
 * @file
 * Functions to support theming in the beginning theme.
 */

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function nero_preprocess_page(&$variables) {
  // Add information about the number of sidebars.
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $variables['contentlayout'] = 'col-md-6 col-sm-6';
    $variables['sidebarfirst'] = 'col-md-3 col-sm-3';
    $variables['sidebarsecond'] = 'col-md-3 col-sm-3';
  }
  elseif (!empty($variables['page']['sidebar_first'])) {
    $variables['contentlayout'] = 'col-md-9 col-sm-9';
    $variables['sidebarfirst'] = 'col-md-3 col-sm-3';
  }
  elseif (!empty($variables['page']['sidebar_second'])) {
    $variables['contentlayout'] = 'col-md-9 col-sm-9';
    $variables['sidebarsecond'] = 'col-md-3 col-sm-3';
  }
  else {
    $variables['contentlayout'] = 'col-md-12';
  }

  // Asign Variable
  $site_config = \Drupal::config('system.site');
  $variables['logo'] = theme_get_setting('logo.url');
  $variables['site_name'] = $site_config->get('name');
  $variables['site_slogan'] = $site_config->get('slogan');

  // Asign Variable
  $variables['show_social_icons'] = theme_get_setting('social_icon_display','nero');
  $variables['facebook_url'] = theme_get_setting('facebook_url','nero');
  $variables['google_plus_url'] = theme_get_setting('google_plus_url','nero');
  $variables['twitter_url'] = theme_get_setting('twitter_url','nero');
  $variables['linkedin_url'] = theme_get_setting('linkedin_url','nero');
  $variables['pinterest_url'] = theme_get_setting('pinterest_url','nero');
  $variables['rss_url'] = theme_get_setting('rss_url','nero');

  // Asign variable for page title
  $request = \Drupal::request();
  if ($route = $request->attributes->get(\Symfony\Cmf\Component\Routing\RouteObjectInterface::ROUTE_OBJECT)) {
    $title = \Drupal::service('title_resolver')->getTitle($request, $route);
  }
  $variables['page_title'] = $title;

  // Asign Variable for Slider
  if ($variables['is_front']) {
    if (theme_get_setting('slideshow_display','nero') == 1) {
      $variables['slideshow_display'] = 1;
      $variables['slider_content'] = nero_get_slider_content();
    }
  }
}

/**
 * Implements hook_form_alter() for adding class for default contact form.
 */
function nero_form_alter( &$form, &$form_state, $form_id ) {
  if($form_id == 'contact_message_feedback_form') {
    $form['#attributes']['class'] = array('form-horizontal');
    $form['#prefix'] = '<div class="row">
      <div class="col-md-12 col-sm-12">
        <div class="cwell">
          <h3 class="title">Contact Form</h3>';
    $form['#suffix'] = '</div></div></div>';
  }
}

/**
 * Implements custom function for get slider content.
 */
function nero_get_slider_content() {
  $slider_content = array();
  for ($i = 1; $i < 6; $i++) {
    $fid = theme_get_setting('slide_image_path'.$i,'nero');
    if (!empty($fid)) {
      $file = file_load($fid[0]);
      $uri = $file->getFileUri();
      $path = file_create_url($uri);
    }
    else {
      $path = base_path() . drupal_get_path('theme', 'nero') . theme_get_setting('slide_image_path_'.$i,'nero');
    }
    $active_class = $i == 1 ? 'active' : 'in-active';

    $slider_content[$i] = '<div class="item ' . $active_class . '">
      <div class="content-wrapper">
	<div class="slide-body demo-text-goes-top" style="background-color:' . nero_colors() . '">
	  <h2>'.substr(wordwrap(theme_get_setting('slide_title_' . $i, 'nero'), 50, "<br>"), 0, 30).'.</h2>
	  <p>'.substr(wordwrap(theme_get_setting('slide_description_' . $i, 'nero'), 60, "<br>"), 0, 100).'</p>
	  <div class="demo-devices">
	    <div class="imac">
	      <div class="content">
		<img src=' . $path . ' class="retina" width="273" height="122">
	      </div>
	    </div>
	  </div>
	</div>
      </div>
    </div>';
  }
  return $slider_content;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function nero_form_system_theme_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $form['nero_settings'] = array(
    '#type' => 'details',
    '#title' => t('nero Settings'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );
  $form['nero_settings']['slideshow'] = array(
    '#type' => 'details',
    '#title' => t('Front Page Slideshow'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['nero_settings']['slideshow']['slideshow_display'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show slideshow'),
    '#default_value' => theme_get_setting('slideshow_display'),
    '#description'   => t("Check this option to show Slideshow in front page. Uncheck to hide."),
  );
  $form['nero_settings']['slideshow']['slide'] = array(
    '#markup' => t('You can change the description and URL of each slide in the following Slide Setting fieldsets.'),
  );
  
  for ($i = 1; $i < 6; $i++) {
    $form['nero_settings']['slideshow']['slide' . $i] = array(
      '#type' => 'details',
      '#title' => t('Slide '.$i),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );
    $form['nero_settings']['slideshow']['slide' . $i]['slide_title_' . $i] = array(
      '#type' => 'textfield',
      '#title' => t('Slide '.$i.' Title'),
      '#default_value' => theme_get_setting('slide_title_' . $i,'nero'),
    );
    $form['nero_settings']['slideshow']['slide' . $i]['slide_description_' . $i] = array(
      '#type' => 'textarea',
      '#title' => t('Slide '.$i.' Description'),
      '#default_value' => theme_get_setting('slide_description_' . $i,'nero'),
    );
    $form['nero_settings']['slideshow']['slide' . $i]['slide_image_' . $i] = array(
      '#type' => 'managed_file',
      '#title' => t('Slide '.$i.' Image'),
      '#default_value' => theme_get_setting('slide_image_path'.$i,'nero'),
      '#upload_location' => 'public://',
    );
  }

  //Social Icon Link
  $form['nero_settings']['social_icon'] = array(
    '#type' => 'details',
    '#title' => t('Social Icon Link'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['nero_settings']['social_icon']['social_icon_display'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show Social Icons'),
    '#default_value' => theme_get_setting('social_icon_display'),
    '#description'   => t("Check this option to show Social icons links in the theme."),
  );
  $form['nero_settings']['social_icon']['facebook_url'] = array(
    '#type' => 'textfield',
    '#title' => t('FaceBook Link'),
    '#default_value' => theme_get_setting('facebook_url'),
  );
  $form['nero_settings']['social_icon']['google_plus_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Google plus Link'),
    '#default_value' => theme_get_setting('google_plus_url'),
  );
  $form['nero_settings']['social_icon']['twitter_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Twitter Link'),
    '#default_value' => theme_get_setting('twitter_url'),
  );
  $form['nero_settings']['social_icon']['linkedin_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Linkedin Link'),
    '#default_value' => theme_get_setting('linkedin_url'),
  );
  $form['nero_settings']['social_icon']['pinterest_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Pinterest Link'),
    '#default_value' => theme_get_setting('pinterest_url'),
  );
  $form['nero_settings']['social_icon']['rss_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Rss Link'),
    '#default_value' => theme_get_setting('rss_url'),
  );
  // Custom submit to save the file permenant.
  $form['#submit'][] = 'nero_settings_form_submit';
}

/**
 * Custom submit handler for nero settings form.
 */
function nero_settings_form_submit(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $account = \Drupal::currentUser();
  $values = $form_state->getValues();
  for ($i = 0; $i < 6; $i++) {
    if (isset($values['slide_image_' . $i]) && !empty($values['slide_image_' . $i])) {
      // Load the file via file.fid.
      $file = file_load($values['slide_image_' . $i][0]);
      // Change status to permanent.
      $file->setPermanent();
      $file->save();
      $file_usage = \Drupal::service('file.usage');
      $file_usage->add($file, 'user', 'user', $account->id());
    }
  }
}

/**
 * Implements hook_preprocss_block().
 */
function nero_preprocess_block(&$variables) {
  // Add bootstrap collapse class to menu block.
  if ($variables['elements']['#plugin_id'] == 'system_menu_block:main') {
    $variables['attributes']['class'][] = 'mattblackmenu';
    $variables['attributes']['class'][] = 'navbar-collapse';
    $variables['attributes']['class'][] = 'collapse';
  }
  if ($variables['elements']['#plugin_id'] == 'system_menu_block:account') {
    $variables['attributes']['class'][] = 'navbar-collapse';
    $variables['attributes']['class'][] = 'collapse';
  }
}

/**
 * Custom api for nero colors.
 */
function nero_colors() {
  $colors = array('#52B9E9', '#FA3031', '#932AB6', '#932AB6', '#F88529', '#1171A3');
  $key = array_rand($colors);
  $color = $colors[$key];
  return $color;
}
