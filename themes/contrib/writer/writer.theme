<?php

/**
 * @file
 * Contains preprocess functions for the Writer theme.
 */

use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_html().
 *
 * Include CSS for code snippets.
 */
function writer_preprocess_html(&$variables) {
  // Turn on styles for code snippets as chosen in the theme settings.
  // To add more options, add the name to the libraries array below,
  // add the description to the options array in theme-settings.php,
  // and add the path to writer.libraries.yml.
  $libraries = array(
    'simple' => 'writer/simple-snippets',
    'night' => 'writer/night-snippets',
    'inset' => 'writer/inset-snippets',
    'zebra' => 'writer/zebra-snippets',
  );
  // Find the value in the theme settings and use it to lookup the library name.
  $code_snippets_library = $options[theme_get_setting('code_snippets')];
  $variables['#attached']['library'][] = $code_snippets_library;

  // Add a theme-specific css class to the body tag.
  $variables['attributes']['class'][] = 'writer';

  // Add no-js class for Modernizr (array not working, only string for class on html_attributes).
  $variables['html_attributes']['class'] = 'no-js';
}

/**
 * Implements hook_page_attachments_alter().
 *
 * Include meta tags and fonts using attachment method.
 */
function writer_page_attachments_alter(array &$build) {

  // Include fonts.
  $font_attributes = array(
    'rel' => 'stylesheet',
    'type' => 'text/css',
    'href' => 'http://fonts.googleapis.com/css?family=Lato|Inconsolata|Merriweather:400,400italic,700,700italic&subset=latin,latin-ext',
  );

  $build['#attached']['html_head_link'][] = array($font_attributes);

  // Set up meta tags.
  // Modern IE & chrome-frame rendering engine tag.
  $rendering_meta = array(
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => array(
      'http-equiv' => 'X-UA-Compatible',
      'content' => 'IE=edge,chrome=1',
    ),
  );
  $build['#attached']['html_head'][] = [$rendering_meta, 'rendering_meta'];
}

/**
 * Implements hook_preprocess_page().
 */
function writer_preprocess_page(&$variables) {

  // Pull the value from theme settings to define the default content width.
  $content_width = Html::escape(theme_get_setting('content_width', 'writer'));
  // Build the style attribute, and store in a template variable.
  $content_width_rule = 'style="max-width: ' . $content_width . 'px;"';
  $variables['content_width_rule'] = $content_width_rule;

  // If this page is displaying a node, find whether the submission information
  // (date submitted) will be displayed, so we can add a class to the wrapper.
  $wrapper_classes = array('wrapper');

  if (isset($variables['node'])) {

    // Get the per-content-type submission info setting, and use it to define a
    // wrapper class.
    $config_file = 'node.type.' . $variables['node']->type->target_id;
    $submission_info = \Drupal::config($config_file)->get('settings.node.submitted');
    if (!$submission_info) {
      $wrapper_classes[] = 'no_submission_info';
    }
  }
  $variables['wrapper_classes'] = implode(' ', $wrapper_classes);
}

/**
 * Implements hook_preprocess_node().
 *
 * Reformat date info. See http://wiki.whatwg.org/wiki/Time_element.
 */
function writer_preprocess_node(&$variables) {
  // Use Drupal's format_date function to reformat dates for the <time> element.
  $variables['date_time'] = format_date($variables['node']->created->value, 'custom', 'Y-m-d H:i:s');
  $variables['clean_date'] = format_date($variables['node']->created->value, 'custom', 'j M Y');
}

/**
 * Implements template_preprocess_comment().
 *
 * Reformat date info. See http://wiki.whatwg.org/wiki/Time_element.
 */
function writer_preprocess_comment(&$variables) {
  // Use Drupal's format_date function to reformat the date.
  $clean_date = format_date($variables['comment']->created->value, 'custom', 'j M Y');
  $date_time = format_date($variables['comment']->created->value, 'custom', 'Y-m-d H:i:s');

  // Build a translatable line with clean, html5 date information.
  $variables['submitted'] = t('On !date_time, !comment_author said...', array(
      '!date_time' => '<time datetime="' . $date_time . '">' . $clean_date . '</time>',
      '!comment_author' => $variables['author'],
    )
  );
}
